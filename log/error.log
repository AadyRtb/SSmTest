ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.example.util.Result com.example.controller.UserController.login(com.example.model.User) throws java.lang.Exception
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-5] - ====>
org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size of 10000000 bytes exceeded; nested exception is org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (187684827) exceeds the configured maximum (10000000)
	at org.springframework.web.multipart.commons.CommonsMultipartResolver.parseRequest(CommonsMultipartResolver.java:196)
	at org.springframework.web.multipart.commons.CommonsMultipartResolver.resolveMultipart(CommonsMultipartResolver.java:176)
	at org.springframework.web.servlet.DispatcherServlet.checkMultipart(DispatcherServlet.java:1210)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1044)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.apache.commons.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (187684827) exceeds the configured maximum (10000000)
	at org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl.<init>(FileUploadBase.java:1007)
	at org.apache.commons.fileupload.FileUploadBase.getItemIterator(FileUploadBase.java:334)
	at org.apache.commons.fileupload.FileUploadBase.parseRequest(FileUploadBase.java:358)
	at org.apache.commons.fileupload.servlet.ServletFileUpload.parseRequest(ServletFileUpload.java:113)
	at org.springframework.web.multipart.commons.CommonsMultipartResolver.parseRequest(CommonsMultipartResolver.java:192)
	... 28 common frames omitted
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
java.lang.NullPointerException: Cannot invoke "org.springframework.web.multipart.MultipartFile.getName()" because "file" is null
	at com.example.controller.FileOperController.doUpload(UploadController.java:32)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-4] - ====>
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-6] - ====>
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:260)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:442)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:383)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:125)
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.getHandlerInternal(RequestMappingInfoHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:498)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1266)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1048)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-7] - ====>
java.io.IOException: Destination file [D:\workspace\java0328-springmvc-ssm\src\main\webapp\uploads\1.jpg] already exists and could not be deleted
	at org.springframework.web.multipart.commons.CommonsMultipartFile.transferTo(CommonsMultipartFile.java:164)
	at com.example.controller.FileOperController.doUpload(FileOperController.java:47)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
java.lang.ArithmeticException: / by zero
	at com.example.controller.OrdersController.showList(OrdersController.java:18)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.findByLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] to manual commit
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=?
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-7] - ==> Parameters: admin(String), 1234(String)
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.findByLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] to manual commit
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-8] - ==>  Preparing: select * from user where username=? and password=?
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-8] - ==> Parameters: admin(String), 1237(String)
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-8] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.findByLogin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] to manual commit
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=?
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-9] - ==> Parameters: admin(String), 1234(String)
DEBUG-com.example.mapper.UserMapper.selectByLogin-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4720d23c] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-2] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-3] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-5] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-6] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-7] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 2
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-10] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-2] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-3] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-4] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-5] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-6] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-7] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-2] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-3] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public java.lang.String com.example.controller.StuController.getStuById(org.springframework.ui.Model,int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public void com.example.controller.StuController.getStuById(int)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:163)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 202100001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.delStuByidstudent-[http-nio-8080-exec-4] - ==>  Preparing: delete from student where idstudent = ?
DEBUG-com.example.mapper.StudentMapper.delStuByidstudent-[http-nio-8080-exec-4] - ==> Parameters: 212231313(Integer)
DEBUG-com.example.mapper.StudentMapper.delStuByidstudent-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 3
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-2] - ====>
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'student' on field 'iddormitory': rejected value []; codes [typeMismatch.student.iddormitory,typeMismatch.iddormitory,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [student.iddormitory,iddormitory]; arguments []; default message [iddormitory]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'iddormitory'; nested exception is java.lang.NumberFormatException: For input string: ""]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:175)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-3] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-3] - ==> Parameters: 123141(String), 赛博朋克(String), 34114(Integer), 科幻123(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - ==> Parameters: 1(String), 奇迹行者(String), 212143(Integer), 啊方法123(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@6d2c3175]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@6d2c3175]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-1] - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '1' for key 'student.PRIMARY'] for task [
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'student.PRIMARY'
### The error may exist in com/example/mapper/StudentMapper.java (best guess)
### The error may involve com.example.mapper.StudentMapper.updateSubmit-Inline
### The error occurred while setting parameters
### SQL: update student set idstudent=?,studentname=?,iddormitory=?,classroom=?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'student.PRIMARY'
]
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'student.PRIMARY'
### The error may exist in com/example/mapper/StudentMapper.java (best guess)
### The error may involve com.example.mapper.StudentMapper.updateSubmit-Inline
### The error occurred while setting parameters
### SQL: update student set idstudent=?,studentname=?,iddormitory=?,classroom=?
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'student.PRIMARY'
; Duplicate entry '1' for key 'student.PRIMARY'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'student.PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy7/jdk.proxy7.$Proxy56.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:288)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy7/jdk.proxy7.$Proxy63.updateSubmit(Unknown Source)
	at com.example.service.impl.StudentServiceImpl.updateSubmit(StudentServiceImpl.java:38)
	at com.example.controller.StuController.updateSubmit(StuController.java:57)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'student.PRIMARY'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy5/jdk.proxy5.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at jdk.proxy7/jdk.proxy7.$Proxy77.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 42 common frames omitted
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - ==> Parameters: 125555(String), 聪明的莫非特(String), 6542(Integer), zz193(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==> Parameters: 1(String), 奇迹行者(String), 212143(Integer), 啊方法123(String), 1(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 125555(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-10] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-10] - ==> Parameters: 125555(String), 聪明的墨菲特(String), 6542(Integer), zz193(String), 125555(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-5] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-5] - ==> Parameters: 47473(String), 葛瑞克(String), 14141(Integer), sdwe5738(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 20210001(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-3] - ====>
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:675)
	at java.base/java.lang.Integer.valueOf(Integer.java:992)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:211)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 33 common frames omitted
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-8] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-8] - ==> Parameters: 733772(String), 胡若蓓(String), 3847(Integer), 是vii是11(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 733772(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - ==> Parameters: 733772(String), 胡若蓓(String), 3847(Integer), 是vii是11(String), 733772(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 733772(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-4] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-4] - ==> Parameters: 733772(String), 胡若蓓(String), 3847(Integer), 是vii是11(String), 733772(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] to manual commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] after transaction
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-2] - ====>
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'password' not found. Available parameters are [arg1, arg0, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy7/jdk.proxy7.$Proxy56.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy7/jdk.proxy7.$Proxy66.log(Unknown Source)
	at com.example.service.impl.UserServiceImpl.log(UserServiceImpl.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy7/jdk.proxy7.$Proxy68.log(Unknown Source)
	at com.example.controller.UserController.log(UserController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'password' not found. Available parameters are [arg1, arg0, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:119)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.TextSqlNode$BindingTokenParser.handleToken(TextSqlNode.java:77)
	at org.apache.ibatis.parsing.GenericTokenParser.parse(GenericTokenParser.java:76)
	at org.apache.ibatis.scripting.xmltags.TextSqlNode.apply(TextSqlNode.java:51)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:119)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at jdk.proxy7/jdk.proxy7.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 53 common frames omitted
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] to manual commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@76d7f0a7] after transaction
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-4] - ====>
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'password' not found. Available parameters are [arg1, arg0, param1, param2]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:97)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy7/jdk.proxy7.$Proxy56.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy7/jdk.proxy7.$Proxy66.log(Unknown Source)
	at com.example.service.impl.UserServiceImpl.log(UserServiceImpl.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy7/jdk.proxy7.$Proxy68.log(Unknown Source)
	at com.example.controller.UserController.log(UserController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: org.apache.ibatis.binding.BindingException: Parameter 'password' not found. Available parameters are [arg1, arg0, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:210)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:119)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:3344)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:121)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:586)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:550)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.TextSqlNode$BindingTokenParser.handleToken(TextSqlNode.java:77)
	at org.apache.ibatis.parsing.GenericTokenParser.parse(GenericTokenParser.java:76)
	at org.apache.ibatis.scripting.xmltags.TextSqlNode.apply(TextSqlNode.java:51)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:39)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:320)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:119)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at jdk.proxy7/jdk.proxy7.$Proxy77.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 53 common frames omitted
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1ab60c16] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ab60c16] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ab60c16] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1ab60c16]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ab60c16]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1ab60c16] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5ef02ce1] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5ef02ce1] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5ef02ce1] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5ef02ce1]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5ef02ce1]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5ef02ce1] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@67c4de86] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67c4de86] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67c4de86] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@67c4de86]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67c4de86]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67c4de86] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: null
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-2] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@d58595f]
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-2] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-2] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@d58595f]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-2] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@20d39381] after transaction
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-2] - ====>
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy7/jdk.proxy7.$Proxy56.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy7/jdk.proxy7.$Proxy66.log(Unknown Source)
	at com.example.service.impl.UserServiceImpl.log(UserServiceImpl.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy7/jdk.proxy7.$Proxy68.log(Unknown Source)
	at com.example.controller.UserController.log(UserController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy5/jdk.proxy5.$Proxy80.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:151)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at jdk.proxy7/jdk.proxy7.$Proxy78.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 53 common frames omitted
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: null
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: null
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==> Parameters: null
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5f9be170] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: null
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@23439c53]
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@23439c53]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-1] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] after transaction
ERROR-com.example.exception.GlobalExceptionHandler-[http-nio-8080-exec-1] - ====>
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:439)
	at jdk.proxy7/jdk.proxy7.$Proxy56.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:142)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:86)
	at jdk.proxy7/jdk.proxy7.$Proxy66.log(Unknown Source)
	at com.example.service.impl.UserServiceImpl.log(UserServiceImpl.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy7/jdk.proxy7.$Proxy68.log(Unknown Source)
	at com.example.controller.UserController.log(UserController.java:23)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1589)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:483)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy5/jdk.proxy5.$Proxy80.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:333)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:151)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:59)
	at jdk.proxy7/jdk.proxy7.$Proxy78.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	... 53 common frames omitted
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: null
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: null
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@68303ba] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: lsd(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1e9a9c0e] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1b3994] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b3994] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b3994] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: lsd(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1b3994]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b3994]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b3994] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1b7cc82e] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b7cc82e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b7cc82e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1b7cc82e]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b7cc82e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1b7cc82e] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@2ce2c7ba] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2ce2c7ba] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2ce2c7ba] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@2ce2c7ba]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2ce2c7ba]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2ce2c7ba] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@40f92d17] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@2d0bedf6] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2d0bedf6] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2d0bedf6] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@2d0bedf6]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2d0bedf6]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2d0bedf6] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@7a0699c8] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7a0699c8] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7a0699c8] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@7a0699c8]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7a0699c8]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7a0699c8] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5e409c76] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: lsd(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==> Parameters: lsd(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@71a13065] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=123
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: lsd(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c66c5d4] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 123141(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==> Parameters: 1221(String), gab(String), 212122(Integer), jj2131(String), 1221(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - ==>  Preparing: insert into room(rid,rfloor,bid) value(?,?,?)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - ==> Parameters: 2122221(Integer), 123123(Integer), 564664(Integer)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-4] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@23950cef]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-4] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-4] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@23950cef]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-4] - Translating SQLException with SQL state '42S02', error code '1146', message [Table 'ssm.room' doesn't exist] for task [
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'ssm.room' doesn't exist
### The error may exist in com/example/mapper/RoomMapper.java (best guess)
### The error may involve com.example.mapper.RoomMapper.addRoom-Inline
### The error occurred while setting parameters
### SQL: insert into room(rid,rfloor,bid) value(?,?,?)
### Cause: java.sql.SQLSyntaxErrorException: Table 'ssm.room' doesn't exist
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-1] - ==>  Preparing: insert into dormitory(rid,rfloor,bid) value(?,?,?)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-1] - ==> Parameters: 2122221(Integer), 123123(Integer), 564664(Integer)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-1] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-3] - ==>  Preparing: insert into dormitory(rid,rfloor,bid) value(?,?,?)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer), 7747(Integer), 2342(Integer)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@2c046f42] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c046f42] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c046f42] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@2c046f42]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c046f42]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c046f42] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 202100001(String)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-4] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer), 7747(Integer), 南二(String), 1(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-7] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-7] - ==> Parameters: 212(Integer), 123123(Integer), 北四(String), 212(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-7] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-1] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-1] - ==> Parameters: 212(Integer), 1(Integer), 北四(String), 212(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-1] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-7] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-7] - ==> Parameters: 2122221(Integer), 123123(Integer), 北四(String), 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-7] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-10] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-10] - ==> Parameters: 2122221(Integer), 123(Integer), 北四(String), 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-4] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-4] - ==> Parameters: 217(Integer), 123(Integer), 北四(String), 217(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-4] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 12(Integer), 7747(Integer), 南二(String), 12(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(String)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==> Parameters: 122(String), gab(String), 212122(Integer), jj2131(String), 122(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-6] - ==>  Preparing: update dormitory set rid=?,rfloor=?,bid=? where rid=?
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-6] - ==> Parameters: 12(Integer), 7747(Integer), 南二(String), 12(Integer)
DEBUG-com.example.mapper.RoomMapper.updateSubmit-[http-nio-8080-exec-6] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1221(String)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-4] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-4] - ==> Parameters: 1221(String), gab(String), 21212(Integer), jj2131(String), 1221(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==> Parameters: 1221(String), gab(String), 21212(Integer), jj2131(String), 1221(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1221(String)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-7] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-7] - ==> Parameters: 1221(String), gab(String), 21212(Integer), jj2131(String), 1221(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-7] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 1221(String), gab(String), 21212(Integer), jj2131(String), 1221(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(String)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 1(String), 奇迹行者(String), 212143(Integer), 啊方法123(String), 1(String)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer), 奇迹行者(String), 212143(Integer), 啊方法123(String), 1(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-1] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-5] - ==>  Preparing: insert into management(eid,ename,work,salary) value(?,?,?,?)
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-5] - ==> Parameters: 112124(Integer), 咖啡机(String), 消防员(String), 3123.123(Double)
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 112124(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.updateSubmit-[http-nio-8080-exec-7] - ==>  Preparing: update management set eid=?,ename=?,work=?,salary=? where eid=?
DEBUG-com.example.mapper.EmployeeMapper.updateSubmit-[http-nio-8080-exec-7] - ==> Parameters: 112124(Integer), 咖啡机1(String), 消防员(String), 3123.123(Double), 112124(Integer)
DEBUG-com.example.mapper.EmployeeMapper.updateSubmit-[http-nio-8080-exec-7] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-10] - ==>  Preparing: insert into management(eid,ename,work,salary) value(?,?,?,?)
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-10] - ==> Parameters: 112124(Integer), 葛瑞克(String), 清洁工(String), 3123.123(Double)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-10] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@312f265f]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-10] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-10] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@312f265f]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-10] - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '112124' for key 'management.PRIMARY'] for task [
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '112124' for key 'management.PRIMARY'
### The error may exist in com/example/mapper/EmployeeMapper.java (best guess)
### The error may involve com.example.mapper.EmployeeMapper.addStudent-Inline
### The error occurred while setting parameters
### SQL: insert into management(eid,ename,work,salary) value(?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '112124' for key 'management.PRIMARY'
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-1] - ==>  Preparing: insert into management(eid,ename,work,salary) value(?,?,?,?)
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-1] - ==> Parameters: 1121(Integer), 葛瑞克(String), 宿管(String), 3123.123(Double)
DEBUG-com.example.mapper.EmployeeMapper.addStudent-[http-nio-8080-exec-1] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-2] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 211(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@19127012] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@19127012] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@19127012] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@19127012]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@19127012]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@19127012] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 112124(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1211(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@44e83e6f] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@44e83e6f] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@44e83e6f] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@44e83e6f]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@44e83e6f]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@44e83e6f] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-6] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-6] - ==> Parameters: 4747(Integer), 葛瑞克(String), 14141(Integer), sdwe5738(String), 4747(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-6] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-9] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-9] - ==> Parameters: 47473(Integer), 葛瑞克(String), 14141(Integer), sdwe5738(String), 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-9] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 4747(Integer), 葛瑞克(String), 14141(Integer), sdwe5738(String), 4747(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-6] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-6] - ==> Parameters: 47473(Integer), 葛瑞克(String), 1414(Integer), sdwe5738(String), 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-6] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@7826e6ea] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7826e6ea] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7826e6ea] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@7826e6ea]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7826e6ea]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7826e6ea] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select studentname ,iddormitory,classroom FROM student,clazz where classroom=cname AND cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 'zz193'(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select studentname,iddormitory,classroom FROM student left join clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 'zz193'(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@7d3afaea]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@7d3afaea]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-1] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where classroom=cname and cname='''zz193'''' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where classroom=cname and cname='''zz193'''' at line 1
### The error may exist in com/example/mapper/ClazzMapper.java (best guess)
### The error may involve com.example.mapper.ClazzMapper.selectAllStu-Inline
### The error occurred while setting parameters
### SQL: select studentname,iddormitory,classroom FROM student left join clazz where classroom=cname and cname=?
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where classroom=cname and cname='''zz193'''' at line 1
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 'zz193'(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 0(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 0(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 125555(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 125555(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==> Parameters: 125555(Integer), 聪明的墨菲特(String), 6541(Integer), zz193(String), 125555(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-5] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-5] - ==> Parameters: 2(Integer), 老逼登(String), 41414(Integer), 作者93(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 8
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-6] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-6] - ==> Parameters: 3(Integer), 任正伟(String), 414(Integer), zz193(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-6] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - ==> Parameters: 3(Integer), 任正伟(String), 414(Integer), zz193(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@7cf92556]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@7cf92556]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-1] - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '3' for key 'student.PRIMARY'] for task [
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '3' for key 'student.PRIMARY'
### The error may exist in com/example/mapper/StudentMapper.java (best guess)
### The error may involve com.example.mapper.StudentMapper.addStudent-Inline
### The error occurred while setting parameters
### SQL: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '3' for key 'student.PRIMARY'
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-4] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-4] - ==> Parameters: 4(Integer), gwq(String), 144(Integer), 是vii是11(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 2(Integer), 老逼登(String), 414141(Integer), zz193(String), 2(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 2(Integer), 老逼登(String), 414414(Integer), zz193(String), 2(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 2(Integer), 老逼登(String), 41441(Integer), zz193(String), 2(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-7] - ==>  Preparing: delete from student where idstudent = ?
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-7] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-7] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-7] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-7] - ==> Parameters: 2(Integer), 老逼登(String), 414414(Integer), zz193(String), 2(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-7] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - ==> Parameters: 122(Integer), garge(String), 21212(Integer), 是vii是11(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-1] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-6] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-6] - ==> Parameters: 5(Integer), 阿尔卡彭(String), 414414(Integer), zz193(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-6] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 11
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@7eea4006] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7eea4006] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7eea4006] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@7eea4006]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7eea4006]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7eea4006] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 733772(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - ==> Parameters: 733772(Integer), 胡若蓓(String), 384(Integer), 是vii是11(String), 733772(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.addBuilding-[http-nio-8080-exec-7] - ==>  Preparing: insert into dormitorybuilding(bid,bname,fid) value(?,?,?)
DEBUG-com.example.mapper.BuildingMapper.addBuilding-[http-nio-8080-exec-7] - ==> Parameters: 2131(Integer), 北三(String), 345(Integer)
DEBUG-com.example.mapper.BuildingMapper.addBuilding-[http-nio-8080-exec-7] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-2] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-2] - ==> Parameters: 2131(Integer), 北三(String), 0(Integer), 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-2] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-5] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-5] - ==> Parameters: 2131(Integer), 北三(String), 0(Integer), 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 2131(Integer), 北三(String), 0(Integer), 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 2131(Integer), 北三(String), 55(Integer), 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-6] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-6] - ==> Parameters: 2131(Integer), 北三(String), 34(Integer), 2131(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-6] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.addBuilding-[http-nio-8080-exec-9] - ==>  Preparing: insert into dormitorybuilding(bid,bname,fid) value(?,?,?)
DEBUG-com.example.mapper.BuildingMapper.addBuilding-[http-nio-8080-exec-9] - ==> Parameters: 3363(Integer), 南五(String), 7335(Integer)
DEBUG-com.example.mapper.BuildingMapper.addBuilding-[http-nio-8080-exec-9] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-2] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-2] - ==> Parameters: 3363(Integer), 南五(String), 733(Integer), 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-2] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-4] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-4] - ==> Parameters: 3363(Integer), 南五(String), 73(Integer), 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 3363(Integer), 南五(String), 733(Integer), 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.delBuBybid-[http-nio-8080-exec-5] - ==>  Preparing: delete from dormitorybuilding where bid = ?
DEBUG-com.example.mapper.BuildingMapper.delBuBybid-[http-nio-8080-exec-5] - ==> Parameters: 3363(Integer)
DEBUG-com.example.mapper.BuildingMapper.delBuBybid-[http-nio-8080-exec-5] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - <==      Total: 3
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1a937996] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1a937996] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1a937996] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1a937996]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1a937996]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1a937996] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-5] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphoneFROM fireman,housemaster,dormitorybuildingwhere fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bidAND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-5] - ==> Parameters: 南四(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@7cf53cd6]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@7cf53cd6]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-5] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bidAND dormitor' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bidAND dormitor' at line 1
### The error may exist in com/example/mapper/ResultMapper.java (best guess)
### The error may involve com.example.mapper.ResultMapper.selectByBname-Inline
### The error occurred while setting parameters
### SQL: SELECT bname ,fname,fphone, rmname,rmphoneFROM fireman,housemaster,dormitorybuildingwhere fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bidAND dormitorybuilding.bname=?;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bidAND dormitor' at line 1
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==> Parameters: 南四(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==> Parameters: 南四(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==> Parameters: 南四(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphoneFROM cleaner,maintenance,dormitorywhere maintenance.floor=dormitory.rfloorAND cleaner.floor=dormitory.rfloorAND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@4f5b4050]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-1] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@4f5b4050]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-1] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.floor=dormitory.rfloorAND    cleaner.floor=dormitory.rfloorAND    dormitory.rid' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.floor=dormitory.rfloorAND    cleaner.floor=dormitory.rfloorAND    dormitory.rid' at line 1
### The error may exist in com/example/mapper/ResultMapper.java (best guess)
### The error may involve com.example.mapper.ResultMapper.selectByRid-Inline
### The error occurred while setting parameters
### SQL: SELECT rid ,cleanname,cphone, mname,mphoneFROM cleaner,maintenance,dormitorywhere  maintenance.floor=dormitory.rfloorAND    cleaner.floor=dormitory.rfloorAND    dormitory.rid=414414;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '.floor=dormitory.rfloorAND    cleaner.floor=dormitory.rfloorAND    dormitory.rid' at line 1
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 11
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 15(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 15(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 15(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: zz193(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 4
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 15(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 15(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=123456
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@67a504] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@a1e43e7] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@a1e43e7] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@a1e43e7] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@a1e43e7]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@a1e43e7]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@a1e43e7] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@588b8b8] for JDBC transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@6039b94a] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6039b94a] read-only
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@588b8b8] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@588b8b8] to manual commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6039b94a] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@588b8b8]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@6039b94a]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@588b8b8]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6039b94a]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@6039b94a] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@588b8b8] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@3020f792] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@3020f792] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@3020f792] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@3020f792]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@3020f792]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@3020f792] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1da90c53] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1da90c53] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1da90c53] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1da90c53]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1da90c53]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1da90c53] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=123456
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=1324556
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=134
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-8] - ==>  Preparing: select * from user where username=? and password=13
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-8] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-8] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@23735313] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@65a2bab2] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5721b36f] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5721b36f] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5721b36f] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5721b36f]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5721b36f]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5721b36f] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] for JDBC transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@f119218] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] read-only
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@f119218] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@f119218] to manual commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=12
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=12
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@f119218]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@f119218]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@f119218] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52084c6e] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2c0782fb] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-4] - ==>  Preparing: delete from student where idstudent = ?
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 123141(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-10] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer), 2(String), 3(Integer), 4(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@180a928e] for JDBC transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] read-only
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@180a928e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] to manual commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@180a928e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: a(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: a(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@1e46e984]
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@1e46e984]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-5] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
]
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-4] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@180a928e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@180a928e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@180a928e] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=1
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@4569410b] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-9] - ==>  Preparing: delete from student where idstudent = ?
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-9] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@30c7e576] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@52402d45] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52402d45] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52402d45] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@52402d45]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52402d45]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@52402d45] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@7c13a4af] for JDBC transaction
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c13a4af] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c13a4af] to manual commit
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@7c13a4af]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c13a4af]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@7c13a4af] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@34fdc741] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@34fdc741] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@34fdc741] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@34fdc741]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@34fdc741]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@34fdc741] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@761fab43] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@761fab43] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@761fab43] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@761fab43]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@761fab43]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@761fab43] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@2e952534] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2e952534] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2e952534] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@2e952534]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2e952534]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@2e952534] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 112124(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 112124(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@69c3b3c8] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5b300d69] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5b300d69] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5b300d69] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5b300d69]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5b300d69]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-10] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5b300d69] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-8] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-8] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-8] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-8] - ==>  Preparing: insert into student(idstudent,studentname,iddormitory,classroom) value(?,?,?,?)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer), 2(String), 3(Integer), 4(String)
DEBUG-com.example.mapper.StudentMapper.addStudent-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 7
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-10] - ==>  Preparing: delete from student where idstudent = ?
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-7] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-2] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==> Parameters: 1221(Integer), gab(String), 21212(Integer), jj2132(String), 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - ==>  Preparing: insert into dormitory(rid,rfloor,bid) value(?,?,?)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer), 2(Integer), 3(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-4] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@5bffbfea]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-4] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-4] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@5bffbfea]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-4] - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '1' for key 'dormitory.PRIMARY'] for task [
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'dormitory.PRIMARY'
### The error may exist in com/example/mapper/RoomMapper.java (best guess)
### The error may involve com.example.mapper.RoomMapper.addRoom-Inline
### The error occurred while setting parameters
### SQL: insert into dormitory(rid,rfloor,bid) value(?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'dormitory.PRIMARY'
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-3] - ==>  Preparing: insert into dormitory(rid,rfloor,bid) value(?,?,?)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer), 2(Integer), 男(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-3] - Translating SQLException with SQL state '23000', error code '1062', message [Duplicate entry '1' for key 'dormitory.PRIMARY'] for task [
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'dormitory.PRIMARY'
### The error may exist in com/example/mapper/RoomMapper.java (best guess)
### The error may involve com.example.mapper.RoomMapper.addRoom-Inline
### The error occurred while setting parameters
### SQL: insert into dormitory(rid,rfloor,bid) value(?,?,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '1' for key 'dormitory.PRIMARY'
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - ==>  Preparing: insert into dormitory(rid,rfloor,bid) value(?,?,?)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - ==> Parameters: 2122222(Integer), 5(Integer), 南四(String)
DEBUG-com.example.mapper.RoomMapper.addRoom-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-7] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-8] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-10] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-1] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-2] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-2] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-5] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-6] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-7] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-8] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 6
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-10] - ==>  Preparing: delete from student where idstudent = ?
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-10] - ==> Parameters: 1221(Integer)
DEBUG-com.example.mapper.StudentMapper.delStuByIdstudent-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-7] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.delEmpByeid-[http-nio-8080-exec-10] - ==>  Preparing: delete from management where eid = ?
DEBUG-com.example.mapper.EmployeeMapper.delEmpByeid-[http-nio-8080-exec-10] - ==> Parameters: 112124(Integer)
DEBUG-com.example.mapper.EmployeeMapper.delEmpByeid-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-3] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@39123254] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-9] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-10] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-1] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-2] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-2] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-8] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@50d3adb0] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@50d3adb0] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@50d3adb0] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@50d3adb0]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@50d3adb0]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@50d3adb0] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 3
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-6] - ==>  Preparing: delete from dormitory where rid = ?
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.RoomMapper.delRoomByRid-[http-nio-8080-exec-6] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-7] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-6] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 47473(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - ==> Parameters: 2122221(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-5] - <==      Total: 2
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1121(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-6] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-10] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-10] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@28085771] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 1(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-7] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@662035ef]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-7] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-7] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@662035ef]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-7] - Translating SQLException with SQL state '42S22', error code '1054', message [Unknown column 'cname' in 'where clause'] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cname' in 'where clause'
### The error may exist in com/example/mapper/ClazzMapper.java (best guess)
### The error may involve com.example.mapper.ClazzMapper.selectAllStu-Inline
### The error occurred while setting parameters
### SQL: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cname' in 'where clause'
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: zz193(String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-9] - Translating SQLException with SQL state '42S22', error code '1054', message [Unknown column 'cname' in 'where clause'] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cname' in 'where clause'
### The error may exist in com/example/mapper/ClazzMapper.java (best guess)
### The error may involve com.example.mapper.ClazzMapper.selectAllStu-Inline
### The error occurred while setting parameters
### SQL: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'cname' in 'where clause'
]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 1(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 202(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-9] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - ==> Parameters: 1205(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 1104(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-5] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from management where eid=?
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 11(Integer)
DEBUG-com.example.mapper.EmployeeMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-9] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-3] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 1(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 3(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-10] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-10] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-1] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 1(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-8] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 电产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 车产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-3] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-6] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-1] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-2] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-7] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-2] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-2] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer), 南一(String), 11(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==> Parameters: 2(Integer), 南二(String), 12(Integer), 2(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 3(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - ==> Parameters: 3(Integer), 南三(String), 13(Integer), 3(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-3] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 4(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-6] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-6] - ==> Parameters: 4(Integer), 南四(String), 14(Integer), 4(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-6] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 5(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==> Parameters: 5(Integer), 南五(String), 15(Integer), 5(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 2(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer), 南一(String), 15(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer), 南一(String), 11(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer), 南一(String), 15(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer), 南一(String), 11(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-10] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-10] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - ==> Parameters: 101(Integer), 哎嘿(String), 1101(Integer), 软产2101(String), 101(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-2] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-4] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-4] - ==> Parameters: 1(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-5] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - ==>  Preparing: update student set idstudent=?,studentname=?,iddormitory=?,classroom=? where idstudent=?
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - ==> Parameters: 101(Integer), 嘿哎(String), 1101(Integer), 软产2101(String), 101(Integer)
DEBUG-com.example.mapper.StudentMapper.updateSubmit-[http-nio-8080-exec-8] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==>  Preparing: select idstudent,studentname,iddormitory,classroom FROM student, clazz where classroom=cname and cname=?
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - ==> Parameters: 软产2101(String)
DEBUG-com.example.mapper.ClazzMapper.selectAllStu-[http-nio-8080-exec-9] - <==      Total: 10
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from student where idstudent=?
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 101(Integer)
DEBUG-com.example.mapper.StudentMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-9] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer), 南一(String), 11(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-9] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-4] - ==>  Preparing: update dormitorybuilding set bid=?,bname=?,fid=? where bid=?
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-4] - ==> Parameters: 1(Integer), 南一(String), 11(Integer), 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.updateSubmit-[http-nio-8080-exec-4] - <==    Updates: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-10] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-10] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-4] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - ==> Parameters: 111(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-10] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-3] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-8] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-7] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-9] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-9] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-4] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-5] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-5] - ==> Parameters: (String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-6] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-6] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-6] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-10] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-6] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-5] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-7] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-3] - <==      Total: 5
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-2] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - ==>  Preparing: select * from dormitorybuilding where bid=?
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - ==> Parameters: 1(Integer)
DEBUG-com.example.mapper.BuildingMapper.selectById-[http-nio-8080-exec-7] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-9] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-9] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-9] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@66add74e] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@66add74e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@66add74e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-3] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@66add74e]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@66add74e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-3] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@66add74e] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-5] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-4] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-4] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@74882f86] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@74882f86] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@74882f86] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-9] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@74882f86]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@74882f86]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-9] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@74882f86] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.ResultMapper.selectByBname-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-4] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-1] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-1] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.ResultMapper.selectByRid-[http-nio-8080-exec-1] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-6] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-7] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-9] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-9] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-9] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-6] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=414414;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-6] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-4] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-4] - ==> Parameters: 1102(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-4] - <==      Total: 0
ERROR-org.springframework.web.servlet.DispatcherServlet-[http-nio-8080-exec-1] - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1164)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1117)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:788)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:128)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 36 common frames omitted
ERROR-org.springframework.web.servlet.DispatcherServlet-[http-nio-8080-exec-1] - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1164)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1117)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:788)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:128)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 36 common frames omitted
ERROR-org.springframework.web.servlet.DispatcherServlet-[http-nio-8080-exec-2] - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1164)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1117)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:788)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:128)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 36 common frames omitted
ERROR-org.springframework.web.servlet.DispatcherServlet-[http-nio-8080-exec-3] - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping': Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:921)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1164)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1117)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:788)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:128)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'roomController' method 
com.example.controller.RoomController#getByRid(Model, int)
to { [/room/selectByRid]}: There is already 'roomController' bean method
com.example.controller.RoomController#getRoomById(Model, int) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 36 common frames omitted
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=1101;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-2] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==>  Preparing: SELECT rid ,cleanname,cphone, mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=1101;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-1] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==>  Preparing: SELECT rid ,cleanname,cphone,mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - ==> Parameters: 1102(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-4] - ==>  Preparing: SELECT rid ,cleanname,cphone,mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-4] - ==> Parameters: 1103(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
ERROR-com.alibaba.druid.pool.DruidDataSource-[Druid-ConnectionPool-Create-222690422] - create connection SQLException, url: jdbc:mysql://127.0.0.1:3306/ssm, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1691)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1789)
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2942)
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-1] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-1] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==>  Preparing: select * from user where username=? and password=
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-5] - ==> Parameters: (String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - Looking up default SQLErrorCodes for DataSource [com.alibaba.druid.pool.DruidDataSource@2db313ca]
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - SQL error codes for 'MySQL' found
DEBUG-org.springframework.jdbc.support.SQLErrorCodesFactory-[http-nio-8080-exec-5] - Caching SQL error codes for DataSource [com.alibaba.druid.pool.DruidDataSource@2db313ca]: database product name is 'MySQL'
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-5] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-5] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==>  Preparing: select * from user where username=? and password=
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-6] - ==> Parameters: (String)
DEBUG-org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator-[http-nio-8080-exec-6] - Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1] for task [
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
### The error may exist in com/example/mapper/UserMapper.java (best guess)
### The error may involve com.example.mapper.UserMapper.log-Inline
### The error occurred while setting parameters
### SQL: select * from user where username=? and password=
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Initiating transaction rollback
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Rolling back JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-6] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@604f231f] after transaction
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@5d0008af] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5d0008af] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5d0008af] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@5d0008af]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5d0008af]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@5d0008af] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==>  Preparing: select * from student
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - ==> Parameters: 
DEBUG-com.example.mapper.StudentMapper.selectAllStu-[http-nio-8080-exec-7] - <==      Total: 50
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Creating new transaction with name [com.example.service.impl.UserServiceImpl.log]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Acquired Connection [com.mysql.cj.jdbc.ConnectionImpl@1f81d75e] for JDBC transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Setting JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1f81d75e] read-only
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Switching JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1f81d75e] to manual commit
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==>  Preparing: select * from user where username=? and password=1234
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - ==> Parameters: admin(String)
DEBUG-com.example.mapper.UserMapper.log-[http-nio-8080-exec-4] - <==      Total: 1
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Initiating transaction commit
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Committing JDBC transaction on Connection [com.mysql.cj.jdbc.ConnectionImpl@1f81d75e]
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Resetting read-only flag of JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1f81d75e]
DEBUG-org.springframework.jdbc.support.JdbcTransactionManager-[http-nio-8080-exec-4] - Releasing JDBC Connection [com.mysql.cj.jdbc.ConnectionImpl@1f81d75e] after transaction
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-6] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-6] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==>  Preparing: select * from clazz
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - ==> Parameters: 
DEBUG-com.example.mapper.ClazzMapper.selectAllClazz-[http-nio-8080-exec-8] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==>  Preparing: select * from management
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - ==> Parameters: 
DEBUG-com.example.mapper.EmployeeMapper.selectAllEmp-[http-nio-8080-exec-10] - <==      Total: 20
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-2] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==>  Preparing: select * from dormitory
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - ==> Parameters: 
DEBUG-com.example.mapper.RoomMapper.selectAllRoom-[http-nio-8080-exec-4] - <==      Total: 50
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==>  Preparing: SELECT rid ,cleanname,cphone,mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - ==> Parameters: 1103(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-7] - ==>  Preparing: SELECT rid ,cleanname,cphone,mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-7] - ==> Parameters: 1103(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-8] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==>  Preparing: select * from dormitory where rid=?
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRId-[http-nio-8080-exec-8] - <==      Total: 1
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-9] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-9] - ==>  Preparing: SELECT rid ,cleanname,cphone,mname,mphone FROM cleaner,maintenance,dormitory where maintenance.floor=dormitory.rfloor AND cleaner.floor=dormitory.rfloor AND dormitory.rid=?;
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-9] - ==> Parameters: 1101(Integer)
DEBUG-com.example.mapper.RoomMapper.selectByRid2-[http-nio-8080-exec-9] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-1] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==>  Preparing: select * from dormitorybuilding
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - ==> Parameters: 
DEBUG-com.example.mapper.BuildingMapper.selectAllBu-[http-nio-8080-exec-1] - <==      Total: 5
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-2] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-2] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-2] - ==> Parameters: 1(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-2] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-3] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-3] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-3] - ==> Parameters: 2(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-3] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-4] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-4] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-4] - ==> Parameters: 南二(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-4] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-5] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-5] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-5] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-5] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-7] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-7] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-7] - ==> Parameters: 南四(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-7] - <==      Total: 0
DEBUG-org.springframework.jdbc.datasource.DataSourceUtils-[http-nio-8080-exec-10] - Fetching JDBC Connection from DataSource
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-10] - ==>  Preparing: SELECT bname ,fname,fphone, rmname,rmphone FROM fireman,housemaster,dormitorybuilding where fireman.fid=dormitorybuilding.fid AND housemaster.bid=dormitorybuilding.bid AND dormitorybuilding.bname=?;
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-10] - ==> Parameters: 南一(String)
DEBUG-com.example.mapper.BuildingMapper.selectByBname-[http-nio-8080-exec-10] - <==      Total: 1
